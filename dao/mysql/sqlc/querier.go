// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"
	"database/sql"
	"time"
)

type Querier interface {
	// {user_id:int64}
	CountAccountsByUserID(ctx context.Context, userID int64) (int64, error)
	// {id:int64, user_id:int64, name:string, avatar:string, gender:string, signature:string}
	CreateAccount(ctx context.Context, arg *CreateAccountParams) error
	// {account1_id:int64,account2_id:int64,apply_msg:string}
	CreateApplication(ctx context.Context, arg *CreateApplicationParams) error
	// -- name: CreateFile :one
	// START TRANSACTION;
	// INSERT INTO files (
	//     file_name, file_type, file_size, `key`, url, relation_id, account_id
	// ) VALUES (
	//              ?, ?, ?, ?, ?, ?, ?
	//          );
	// SELECT * FROM files
	// WHERE file_id = LAST_INSERT_ID();
	// COMMIT;
	CreateFile(ctx context.Context, arg *CreateFileParams) error
	CreateFriendRelation(ctx context.Context, arg *CreateFriendRelationParams) error
	CreateGroupRelation(ctx context.Context, arg *CreateGroupRelationParams) error
	// {notify_type:string,msg_type:string}
	CreateMessage(ctx context.Context, arg *CreateMessageParams) error
	CreateMessageReturn(ctx context.Context) (*CreateMessageReturnRow, error)
	CreateSetting(ctx context.Context, arg *CreateSettingParams) error
	// {email:string,password:string}
	CreateUser(ctx context.Context, arg *CreateUserParams) error
	// {id:int64}
	DeleteAccount(ctx context.Context, id int64) error
	// {user_id:int64}
	DeleteAccountsByUserID(ctx context.Context, userID int64) error
	// {account1_id:int64,account2_id:int64}
	DeleteApplication(ctx context.Context, arg *DeleteApplicationParams) error
	DeleteFileByID(ctx context.Context, id int64) error
	DeleteFriendRelationsByAccountID(ctx context.Context, arg *DeleteFriendRelationsByAccountIDParams) error
	DeleteRelation(ctx context.Context, id int64) error
	DeleteSetting(ctx context.Context, arg *DeleteSettingParams) error
	DeleteSettingsByAccountID(ctx context.Context, accountID int64) error
	// {id:int64}
	DeleteUser(ctx context.Context, id int64) error
	// {email:string}
	ExistEmail(ctx context.Context, email string) (bool, error)
	ExistRelation(ctx context.Context, arg *ExistRelationParams) (bool, error)
	// {id:int64}
	ExistsAccountByID(ctx context.Context, id int64) (bool, error)
	// {user_id:int64, name:string}
	ExistsAccountByNameAndUserID(ctx context.Context, arg *ExistsAccountByNameAndUserIDParams) (bool, error)
	// {account1_id:int64,account2_id:int64}
	ExistsApplicationByIDWithLock(ctx context.Context, arg *ExistsApplicationByIDWithLockParams) (bool, error)
	ExistsFriendRelation(ctx context.Context, arg *ExistsFriendRelationParams) (bool, error)
	ExistsFriendSetting(ctx context.Context, arg *ExistsFriendSettingParams) (bool, error)
	ExistsGroupLeaderByAccountIDWithLock(ctx context.Context, accountID int64) (bool, error)
	ExistsIsLeader(ctx context.Context, arg *ExistsIsLeaderParams) (bool, error)
	ExistsSetting(ctx context.Context, arg *ExistsSettingParams) (bool, error)
	// {id:int64}
	ExistsUserByID(ctx context.Context, id int64) (bool, error)
	// {accounts.id:int64, r.account2_id:int64, r.account1_id:int64}
	GetAccountByID(ctx context.Context, arg *GetAccountByIDParams) (*GetAccountByIDRow, error)
	GetAccountIDsByMsgID(ctx context.Context, id int64) (*GetAccountIDsByMsgIDRow, error)
	GetAccountIDsByRelationID(ctx context.Context, relationID int64) ([]int64, error)
	// {user_id:int64}
	GetAccountIDsByUserID(ctx context.Context, userID int64) ([]int64, error)
	GetAccountInfoByID(ctx context.Context, arg *GetAccountInfoByIDParams) (*GetAccountInfoByIDRow, error)
	// {name:string, user_id:int64, page:int64, page_size:int64}
	GetAccountsByName(ctx context.Context, arg *GetAccountsByNameParams) ([]*GetAccountsByNameRow, error)
	// {user_id:int64}
	GetAccountsByUserID(ctx context.Context, userID int64) ([]*GetAccountsByUserIDRow, error)
	GetAcountIDsByUserID(ctx context.Context, userID int64) ([]int64, error)
	GetAllEmail(ctx context.Context) ([]string, error)
	GetAllGroupRelation(ctx context.Context) ([]int64, error)
	GetAllRelationIDs(ctx context.Context) ([]int64, error)
	GetAllRelationOnRelation(ctx context.Context) ([]*Relation, error)
	// {account1_id:int64,account2_id:int64}
	GetApplicationByID(ctx context.Context, arg *GetApplicationByIDParams) (*Application, error)
	// {account1_id:int64,account2_id:int64,limit:int32,offset:int32,total:int64}
	GetApplications(ctx context.Context, arg *GetApplicationsParams) ([]*GetApplicationsRow, error)
	GetApplicationsCreatTime(ctx context.Context, arg *GetApplicationsCreatTimeParams) (time.Time, error)
	GetApplicationsStatus(ctx context.Context, arg *GetApplicationsStatusParams) (ApplicationsStatus, error)
	GetCreateFile(ctx context.Context, fileKey string) (*File, error)
	GetFileByRelation(ctx context.Context, relationID sql.NullInt64) ([]*File, error)
	GetFileByRelationID(ctx context.Context, relationID sql.NullInt64) ([]*File, error)
	GetFileDetailsByID(ctx context.Context, id int64) (*File, error)
	GetFileKeyByID(ctx context.Context, id int64) (string, error)
	GetFriendPinSettingsOrderByPinTime(ctx context.Context, arg *GetFriendPinSettingsOrderByPinTimeParams) ([]*GetFriendPinSettingsOrderByPinTimeRow, error)
	GetFriendRelationByID(ctx context.Context, id int64) (*GetFriendRelationByIDRow, error)
	GetFriendRelationIDsByAccountID(ctx context.Context, arg *GetFriendRelationIDsByAccountIDParams) ([]int64, error)
	GetFriendRelationIdByID1AndID1(ctx context.Context, arg *GetFriendRelationIdByID1AndID1Params) (int64, error)
	GetFriendSettingsByName(ctx context.Context, arg *GetFriendSettingsByNameParams) ([]*GetFriendSettingsByNameRow, error)
	GetFriendSettingsOrderByName(ctx context.Context, arg *GetFriendSettingsOrderByNameParams) ([]*GetFriendSettingsOrderByNameRow, error)
	GetFriendShowSettingsOrderByShowTime(ctx context.Context, arg *GetFriendShowSettingsOrderByShowTimeParams) ([]*GetFriendShowSettingsOrderByShowTimeRow, error)
	GetGroupAvatar(ctx context.Context, relationID sql.NullInt64) (*File, error)
	GetGroupList(ctx context.Context, arg *GetGroupListParams) ([]*GetGroupListRow, error)
	GetGroupMembersByID(ctx context.Context, arg *GetGroupMembersByIDParams) ([]*GetGroupMembersByIDRow, error)
	GetGroupPinSettingsOrderByPinTime(ctx context.Context, arg *GetGroupPinSettingsOrderByPinTimeParams) ([]*GetGroupPinSettingsOrderByPinTimeRow, error)
	GetGroupRelationByID(ctx context.Context, id int64) (*GetGroupRelationByIDRow, error)
	GetGroupRelationsId(ctx context.Context) (int64, error)
	GetGroupSettingsByName(ctx context.Context, arg *GetGroupSettingsByNameParams) ([]*GetGroupSettingsByNameRow, error)
	GetGroupShowSettingsOrderByShowTime(ctx context.Context, arg *GetGroupShowSettingsOrderByShowTimeParams) ([]*GetGroupShowSettingsOrderByShowTimeRow, error)
	GetMessageByID(ctx context.Context, id int64) (*Message, error)
	GetMessageInfoTx(ctx context.Context) (*GetMessageInfoTxRow, error)
	GetMsgDeleteById(ctx context.Context, id int64) (int32, error)
	GetMsgsByContent(ctx context.Context, arg *GetMsgsByContentParams) ([]*GetMsgsByContentRow, error)
	GetMsgsByContentAndRelation(ctx context.Context, arg *GetMsgsByContentAndRelationParams) ([]*GetMsgsByContentAndRelationRow, error)
	GetMsgsByRelationIDAndTime(ctx context.Context, arg *GetMsgsByRelationIDAndTimeParams) ([]*GetMsgsByRelationIDAndTimeRow, error)
	GetNickNameByAccountIDAndRelation(ctx context.Context, arg *GetNickNameByAccountIDAndRelationParams) (string, error)
	GetPinMsgsByRelationID(ctx context.Context, arg *GetPinMsgsByRelationIDParams) ([]*GetPinMsgsByRelationIDRow, error)
	GetRelationIDByAccountID(ctx context.Context, arg *GetRelationIDByAccountIDParams) (int64, error)
	GetRelationIDsByAccountIDFromSettings(ctx context.Context, accountID int64) ([]int64, error)
	GetRlyMsgsInfoByMsgID(ctx context.Context, arg *GetRlyMsgsInfoByMsgIDParams) ([]*GetRlyMsgsInfoByMsgIDRow, error)
	GetSettingByID(ctx context.Context, arg *GetSettingByIDParams) (*Setting, error)
	GetTopMsgByRelationID(ctx context.Context, arg *GetTopMsgByRelationIDParams) (*GetTopMsgByRelationIDRow, error)
	// {email:string}
	GetUserByEmail(ctx context.Context, email string) (*User, error)
	// {id:int64}
	GetUserByID(ctx context.Context, id int64) (*User, error)
	OfferMsgsByAccountIDAndTime(ctx context.Context, arg *OfferMsgsByAccountIDAndTimeParams) ([]*OfferMsgsByAccountIDAndTimeRow, error)
	TransferIsLeaderFalse(ctx context.Context, arg *TransferIsLeaderFalseParams) error
	TransferIsLeaderTrue(ctx context.Context, arg *TransferIsLeaderTrueParams) error
	// {id:int64, name:string, gender:string, signature:string}
	UpdateAccount(ctx context.Context, arg *UpdateAccountParams) error
	// {id:int64, avatar:string}
	UpdateAccountAvatar(ctx context.Context, arg *UpdateAccountAvatarParams) error
	// {status:string,refuse_msg:string,account1_id:int64,account2_id:int64}
	UpdateApplication(ctx context.Context, arg *UpdateApplicationParams) error
	UpdateGroupAvatar(ctx context.Context, arg *UpdateGroupAvatarParams) error
	UpdateGroupRelation(ctx context.Context, arg *UpdateGroupRelationParams) error
	UpdateMsgDelete(ctx context.Context, arg *UpdateMsgDeleteParams) error
	UpdateMsgPin(ctx context.Context, arg *UpdateMsgPinParams) error
	UpdateMsgRevoke(ctx context.Context, arg *UpdateMsgRevokeParams) error
	UpdateMsgTop(ctx context.Context, arg *UpdateMsgTopParams) error
	UpdateSettingDisturb(ctx context.Context, arg *UpdateSettingDisturbParams) error
	UpdateSettingLeader(ctx context.Context, arg *UpdateSettingLeaderParams) error
	UpdateSettingNickName(ctx context.Context, arg *UpdateSettingNickNameParams) error
	UpdateSettingPin(ctx context.Context, arg *UpdateSettingPinParams) error
	UpdateSettingShow(ctx context.Context, arg *UpdateSettingShowParams) error
	UpdateUser(ctx context.Context, arg *UpdateUserParams) error
}

var _ Querier = (*Queries)(nil)
